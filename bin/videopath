#!/bin/bash
show_help() {
	cat << EOF
Usage: videopath DAY CHANNEL START_HOUR"
       videopath CHANNEL START_HOUR"
       videopath [d[ay]=DAY] [c[h]=CHANNEL] [h[r]=START_HOUR]

Examples (the following commands share the same meaning):

	videopath 2 1 8
	videopath day=2 ch=1 hr=8      # keyworded
	videopath ch=1 day=2 hr=8      # reordered
	videopath h=8 d=2 c=1          # shortened keywords
EOF
}

basedir="$PROJ_HOME/res/videos"

######################################################################
# Populate (day), ch and hr variables.                               #
######################################################################
parse_args() {
	day=
	ch=
	hr=
	local _pos_args=()
	while [ -n "$1" ]; do
		case "$1" in
			d*=*) day="${1##*=}" ;;
			c*=*) ch="${1##*=}"  ;;
			h*=*) hr="${1##*=}"  ;;
			-h|--help) show_help; exit 0; ;;
			*) _pos_args+=("$1") ;;
		esac
		shift
	done
	case "${#_pos_args[@]}" in
		0) ;;
		2)
			ch="${_pos_args[0]}"
			hr="${_pos_args[1]}"
			;;
		3)
			day="${_pos_args[0]}"
			ch="${_pos_args[1]}"
			hr="${_pos_args[2]}"
			;;
		*)
			echo "Illegal # of position arguments" >&2
			exit 1
			;;
	esac
	if [ -z "$ch" ] || [ -z "$hr" ]; then
		echo "CHANNEL and/or START_HOUR not specified" >&2
		exit 1
	fi
}


echo_video_path() {
	local _videoname
	_videoname="[CH$(printf "%02d" "$ch")]$(printf "%02d" "$hr")_00_00.avi"
	if [ -z "$day" ]; then
		echo "$basedir/$_videoname"
	elif [ -d "$basedir/${day}Feb13.${hr}to$(( hr + 3 ))" ]; then
		echo "$basedir/${day}Feb13.${hr}to$(( hr + 3 ))/$_videoname"
	else
		if find "$basedir/" -mindepth 1 -maxdepth 1 -type d -name "${day}Feb13.${hr}to*" | grep -q ''; then
			echo "$(find "$basedir/" -mindepth 1 -maxdepth 1 -type d -name "${day}Feb13.${hr}to*" | head -1)/$_videoname"
		else
			echo "$basedir/${day}Feb13.${hr}to$(( hr + 3 ))/$_videoname"
		fi
	fi
}


_videopath=
parse_args "$@"
_videopath=$(echo_video_path)
if [ ! -f "$_videopath" ]; then
	echo "file not found: $_videopath" >&2
	exit 4
fi
echo "$_videopath"
